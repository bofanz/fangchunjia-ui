/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useContext, useState } from "react";
import { useGLTF } from "@react-three/drei";
import type { CherryState } from "./cherry-lamp-container";
import { HomeContext } from "../../contexts/home-context";
import type { ProjectInterface } from "../project/project";

export function SampleLamp({
  cherries,
  setCherryState,
  ...props
}: {
  cherries: ProjectInterface[];
  setCherryState: (cherryState: CherryState) => void;
}) {
  const { setProjectOnDisplay } = useContext(HomeContext);
  const { nodes, materials } = useGLTF("/test2.glb");
  const [hovered, setHovered] = useState(false);

  return (
    <group {...props} dispose={null}>
      <group
        name="Base"
        onClick={(event) => {
          console.log("click base", event);
        }}
      >
        <mesh
          name="Cube"
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials.Material}
        />
        <mesh
          name="Cube001"
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={materials["Material.002"]}
          position={[0, 0, -2.012]}
        />
      </group>
      <mesh
        name="Sphere"
        castShadow
        receiveShadow
        geometry={nodes.Sphere.geometry}
        material={nodes.Sphere.material}
        position={[0, 1.688, 0]}
        scale={[0.667, 0.667, 0.649]}
        onClick={(event) => {
          event.stopPropagation();
          console.log("click ball 1", event);
        }}
        onPointerOver={() => {
          setCherryState("hover");
          setProjectOnDisplay?.(cherries[1]);
          setHovered(true);
        }}
        onPointerDown={() => {
          setCherryState("active");
          setHovered(true);
        }}
        onPointerUp={() => {
          setCherryState("hover");
          setHovered(true);
        }}
        onPointerOut={() => {
          setCherryState(null);
          setProjectOnDisplay?.(null);
          setHovered(false);
        }}
      />
      <mesh
        name="Sphere001"
        castShadow
        receiveShadow
        geometry={nodes.Sphere001.geometry}
        material={nodes.Sphere001.material}
        position={[0, 1.421, -2.274]}
        scale={[0.528, 0.426, 0.434]}
        onClick={(event) => {
          console.log("click ball 2", event);
        }}
      />
    </group>
  );
}
